version: '3'
services:
  db:
    image: postgres:12
    restart: always
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: ${POSTGRESQL_USER}
      POSTGRES_PASSWORD: ${POSTGRESQL_PASSWORD}
    volumes:
      - postgres:/var/lib/postgresql/data
  scheduler:
    image: amplication/scheduler
    command: --request.url http://host.docker.internal:3000/system/update-statuses --request.method POST --schedule '* * * * *'
    network_mode: host
volumes:
  postgres: ~

#version: "3"
#services:
#  server:
#    build:
#      context: .
#      args:
#        NPM_LOG_LEVEL: notice
#    ports:
#      - "${SERVER_PORT}:3000"
#    environment:
#      POSTGRESQL_URL: "postgres://${POSTGRESQL_USER}:${POSTGRESQL_PASSWORD}@db:5432"
#      BCRYPT_SALT: "${BCRYPT_SALT}"
#      JWT_SECRET_KEY: "${JWT_SECRET_KEY}"
#      JWT_EXPIRATION: "${JWT_EXPIRATION}"
#    depends_on:
#      - migrate
#  migrate:
#    build:
#      context: .
#      args:
#        NPM_LOG_LEVEL: notice
#    command: npm run db:init
#    working_dir: /app/server
#    environment:
#      POSTGRESQL_URL: "postgres://${POSTGRESQL_USER}:${POSTGRESQL_PASSWORD}@db:5432"
#      BCRYPT_SALT: "${BCRYPT_SALT}"
#    depends_on:
#      - db
#  db:
#    image: postgres:12
#    environment:
#      POSTGRES_USER: ${POSTGRESQL_USER}
#      POSTGRES_PASSWORD: ${POSTGRESQL_PASSWORD}
#    volumes:
#      - postgres:/var/lib/postgresql/data
#volumes:
#  postgres: ~
