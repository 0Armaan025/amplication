import React, { useState } from "react";
import "../CreateServiceWizard.scss";

import { CreateServiceWizardLayout as Layout } from "../CreateServiceWizardLayout";
import { ImageLabelDescriptionSelector } from "./ImageLabelDescriptionSelector";
import { WizardStepProps } from "./interfaces";

const CreateServiceDatabase: React.FC<WizardStepProps> = ({ moduleClass }) => {
  const PLUGIN_LOGO_BASE_URL =
    "https://raw.githubusercontent.com/amplication/plugin-catalog/master/assets/icons/";

  return (
    <Layout.Split>
      <Layout.LeftSide>
        <Layout.Description
          header="Which database do you want to use?"
          text={`Amplication generates the service with all the required configuration and code to start working with a DB. 
          
          You can easily change the type of the DB later in the plugins page
          `}
        />
      </Layout.LeftSide>
      <Layout.RightSide>
        <Layout.SelectorWrapper>
          <ImageLabelDescriptionSelector
            name="postgres"
            icon={`${PLUGIN_LOGO_BASE_URL}db-postgres.png`}
            label="PostgreSQL DB"
            description="Use PostgreSQL database in Amplication service."
          />
          <ImageLabelDescriptionSelector
            name="mongo"
            icon={`${PLUGIN_LOGO_BASE_URL}db-mongo.png`}
            label="Mongo DB"
            description="Use a Mongo database in the service generated by Amplication"
          />
          <ImageLabelDescriptionSelector
            name="mysql"
            icon={`${PLUGIN_LOGO_BASE_URL}db-mysql.png`}
            label="MySQL DB"
            description="Use MongoDB database in Amplication service."
          />
          <ImageLabelDescriptionSelector
            name="no-database"
            icon={`${PLUGIN_LOGO_BASE_URL}db-mysql.png`}
            label="No database"
            description="Start using your service without a database"
          />
        </Layout.SelectorWrapper>
      </Layout.RightSide>
    </Layout.Split>
  );
};

export default CreateServiceDatabase;
