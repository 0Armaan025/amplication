steps:
  - id: "docker-build"
    name: "gcr.io/kaniko-project/executor"
    args:
      - --destination=gcr.io/$PROJECT_ID/amplication:$SHORT_SHA
      - --cache=true
      - --cache-ttl=10h
      - --build-arg=REACT_APP_GITHUB_CLIENT_ID=${_REACT_APP_GITHUB_CLIENT_ID}
      - --build-arg=REACT_APP_GITHUB_SCOPE=${_REACT_APP_GITHUB_SCOPE}
      - --build-arg=REACT_APP_GITHUB_REDIRECT_URI=${_REACT_APP_GITHUB_REDIRECT_URI}

  - id: "terraform-init"
    name: "hashicorp/terraform:0.13.0"
    args: ["init"]
    dir: terraform
    waitFor: ["-"]

  - id: "terraform-apply"
    name: "hashicorp/terraform:0.13.0"
    args: ["apply", "-auto-approve"]
    dir: terraform
    env:
      - "TF_VAR_image_id=gcr.io/$PROJECT_ID/amplication:$SHORT_SHA"
    waitFor: ["terraform-init", "docker-build"]

  - name: "node:12-stretch"
    entrypoint: bash
    args:
      - -c
      - |
        set -e;
        wget -O /workspace/cloud_sql_proxy https://storage.googleapis.com/cloudsql-proxy/v1.16/cloud_sql_proxy.linux.386;
        chmod +x /workspace/cloud_sql_proxy;
        /workspace/cloud_sql_proxy -dir=/workspace -instances=amplication:us-east1:app-postgres=tcp:5432 & sleep 2
        cd packages/amplication-server/prisma/;
        POSTGRESQL_URL="postgresql://$_POSTGRESQL_USER:$_POSTGRESQL_PASSWORD@localhost:5432/$_POSTGRESQL_DB" npx @prisma/cli migrate up --auto-approve --experimental;
    waitFor: ["terraform-apply"]

# 1 hour
timeout: 3600s
