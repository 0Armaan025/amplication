name: Continuous Integration (Nx)

on:
  workflow_dispatch:
  push:
    branches:
      - feature/nx
  pull_request:

env:
  NX_BRANCH: ${{ github.ref_name }}
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}

jobs:
  ci:
    name: Continuous Integration
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: nrwl/nx-set-shas@v3
        with:
          main-branch-name: next

      - name: Cache node modules
        id: cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: cache-node-modules-${{ hashFiles('package-lock.json') }}

      - uses: actions/setup-node@v1
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          node-version: 16.x

      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Nx Workspace Lint
        run: npx nx workspace-lint

      - name: Nx Format Check
        run: npx nx format:check

      - name: Lint
        run: npx nx affected --target=lint --parallel=3

      - name: Test
        run: npx nx affected --target=test --parallel=3

      - name: Build
        run: npx nx affected --target=build --parallel=3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: GitHub Auth Login
        run: gh auth login --with-token
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Dockerize
        run: npx nx affected --target=docker:build --configuration=ci --parallel=3
