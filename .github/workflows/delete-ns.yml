name: delete-ns
on:
  workflow_dispatch:
    inputs:
      namespace:
        type: string
        description: Which namespace you want to delete
        default: shimi
        required: true

jobs:
  check-ns-name:
    runs-on: ubuntu-18.04
    outputs:
      namespace_valid: ${{ steps.check-ns.outputs.namespace_valid }}
    steps:
      - name: check namespace
        id: check-ns
        env: 
          NAMESPACE: ${{ github.event.inputs.namespace }}
        run: |
          NAMESPACE=$NAMESPACE
          echo "namespce: $NAMESPACE"
          if [[ "$NAMESPACE" == "staging" || "$NAMESPACE" == "staging-os" || "$NAMESPACE" == "prod" ]]; then
            echo "This is not a dynamic namespace."
            echo "::set-output name=namespace_valid::false"
          else
            echo "::set-output name=namespace_valid::true"
          fi
  delete-ns:
    runs-on: ubuntu-18.04
    needs: [check-ns-name]
    if: ${{ needs.check-ns-name.outputs.namespace_valid == "true" }}
    steps:
      - name: install argocd
        id: install-argocd
        run: |
          curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          chmod +x /usr/local/bin/argocd
      - name: argocd login
        env: 
          ARGO_CD_PASSWORD: ${{ secrets.AWS_STAGING_OS_ARGOCD }}
        run: |
          ARGO_CD_URL="argocd.staging-os.amplication-dev.com"
          argocd login $ARGO_CD_URL --username admin --password $ARGO_CD_PASSWORD --grpc-web
      - name: check if namespace exist
        id: ns-exist
        env: 
          NAMESPACE: ${{ github.event.inputs.namespace }}
        run: |
          set +e
          Get_app="$(argocd app list)"
          if [[ -z "$Get_app" ]]
          then
            echo "namespace doesn't exist"
            echo "::set-output name=app_exist::false"
          else
            echo "namespace exists"
            echo "::set-output name=app_exist::true"
          fi
      - name: delete ns
        if: ${{ steps.ns-exist.outputs.app_exist == "true" }}
        env:
          NAMESPACE: ${{ github.event.inputs.namespace }}
        run: |
          APPNAME="amplication-$NAMESPACE"
          argocd app delete $APPNAME






