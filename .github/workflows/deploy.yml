# This workflow will deploy the provided image-id to amplication-staging-oc on GCP
name: delete-ns
on:
  workflow_dispatch:
    inputs:
      namespace:
        type: choice
        description: Which namespace you want to delete
        default: shimi
        required: true
        options: 
        - shimi
        - mor
        - amit

jobs:
  delete-ns:
    runs-on: ubuntu-18.04
    steps:
      - name: install argocd
        id: install-argocd
        run: |
          curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          chmod +x /usr/local/bin/argocd
      - name: argocd login
        env: 
          ARGO_CD_PASSWORD: ${{ secrets.AWS_STAGING_OS_ARGOCD }}
        run: |
          ARGO_CD_URL="argocd.staging-os.amplication-dev.com"
          argocd login $ARGO_CD_URL --username admin --password $ARGO_CD_PASSWORD --grpc-web
      - name: delete ns
        env:
          NAMESPACE: ${{ github.event.inputs.namespace }}
        run: |
          APPNAME="amplication-$NAMESPACE"
          set +e
          argocd app delete $APPNAME


# name: Deploy to staging
# on: 
#   workflow_dispatch:
#     inputs:
#       image-id:
#         description: 'Docker image ID'     
#         required: true
# jobs:
#   deploy:
#     runs-on: ubuntu-latest
#     timeout-minutes: 120
#     steps:
#       - uses: actions/checkout@v2
#       - uses: docker/setup-buildx-action@v1
#         with:
#           driver-opts: image=moby/buildkit:master
#       - name: Login to GCR
#         uses: docker/login-action@v1
#         with:
#           registry: gcr.io
#           username: _json_key
#           password: ${{ secrets.GOOGLE_CREDENTIALS }}
#       - uses: hashicorp/setup-terraform@v1
#       - run: terraform init
#         env:
#           GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
#         working-directory: terraform/envs/staging-oc
#       - run: terraform apply -auto-approve -lock-timeout=1200s
#         env:
#           GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
#           TF_VAR_image_id: gcr.io/${{ github.event.inputs.image-id }}
#           TF_VAR_github_app_private_key: ${{ secrets.STAGING_GITHUB_APP_PRIVATE_KEY }}
#           TF_VAR_github_app_client_secret: ${{ secrets.STAGING_GITHUB_APP_CLIENT_SECRET }}
#         working-directory: terraform/envs/staging-oc
#       - uses: mattes/gce-cloudsql-proxy-action@v1
#         with:
#           creds: ${{ secrets.GOOGLE_CREDENTIALS }}
#           instance: ${{ secrets.STAGING_DB_INSTANCE_NAME }}
#       - run: |
#           set -e;
#           docker run \
#             --network host \
#             --env POSTGRESQL_URL="postgresql://${{ secrets.STAGING_DB_USER }}:${{ secrets.STAGING_DB_PASSWORD }}@127.0.0.1:5432/${{ secrets.STAGING_DB_NAME }}" \
#             gcr.io/${{ github.event.inputs.image-id }} \
#             npm run migrate:up
